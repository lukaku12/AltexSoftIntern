{"version":3,"sources":["libs/FormLib/FormLib.context.js","libs/FormLib/FormLib.actions.js","libs/FormLib/FormLib.reducer.js","libs/FormLib/FormLib.hooks.js","libs/FormLib/FormLib.helpers.js","libs/FormLib/FormLib.provider.jsx","libs/FormLib/components/Form/Form.jsx","libs/FormLib/components/ErrorLabel/ErrorLabel.jsx","libs/FormLib/components/FieldError/FieldError.jsx","libs/FormLib/components/FormLibInput/FormLibInput.jsx","libs/FormLib/components/FormLibSelect/FormLibSelect.jsx","libs/FormLib/components/FormLibCheckbox/FormLibCheckbox.jsx","api/registration.js","config.js","validation/formValidation.js","hooks/useDataFetch.js","components/UserForm/hooks/useUserForm.js","components/UserForm/UserForm.jsx","App.jsx","index.jsx"],"names":["FormLibContext","createContext","apiErrors","initialErrors","initialValues","initialIsTouched","rules","values","errors","generalErrors","touched","isValid","isDirty","isTouched","isSubmitted","resetForm","submitForm","handleReset","handleSubmit","setFormDirty","setFieldValue","setFieldTouched","setFormSubmission","getFieldMeta","getFieldProps","getFieldHelpers","FormLibProvider","Provider","useFormLibContext","useContext","ACTION_RESET_FORM","ACTION_SUBMIT_FORM","ACTION_SET_FORM_DIRTY","ACTION_SET_FIELD_VALUE","ACTION_SET_FIELD_TOUCHED","ACTION_SET_SUBMITTING_PROCESS","ACTION_SET_FORM_ERROR","initFormReducer","initialTouched","isValidInitial","Object","keys","reduce","acc","fieldName","some","isSubmittingInProcess","formReducer","formState","formAction","type","payload","prev","curr","fieldValue","fieldTouched","fieldError","useFormLib","onReset","onSubmit","hasResetOnSubmit","isLoading","initialReducerProps","useMemo","useReducer","dispatchForm","fieldNamesList","setFieldError","setAllErrors","setIsApiErrors","setSubmittingInProcess","setFormValidationStatus","setFormInitial","useCallback","nextState","formIsValidated","firstName","length","lastName","website","age","email","includes","country","city","catchPhrase","validateFormSubmission","handleBlur","toString","validateField","handleChange","currentValues","JSON","stringify","e","checkFormDirty","useEffect","every","isApiErrors","name","value","onBlur","onChange","setValue","setError","setTouched","setGeneralErrors","event","preventDefault","stopPropagation","useField","FormLib","children","props","formProps","isFunction","Form","action","ErrorLabel","mapedError","className","map","message","style","display","Math","random","FieldError","fieldErrors","FormLibInput","target","FormLibSelect","options","option","label","FormLibCheckbox","checked","registerApiCreator","user","fetch","process","method","body","headers","userFormRules","inputName","validateOn","HttpStatusE","fetchReducer","state","error","isFirstRequestLoaded","data","fullResponse","MOCK_API_ERRORS","useUserForm","submitPromise","useState","apiValidationErrors","setApiValidationErrors","fetchHandler","initialData","onError","onSuccess","isLoadingInitial","isLazy","dispatch","requestWorker","fetchPromise","a","didCancel","response","json","responseData","responsePayload","ok","status","statusText","useDataFetch","registerUserRes","responseStatus","EMPTY_FORM_VALUES","married","sex","UserForm","isSubmitPermanentlyEnabled","form","visibility","placeholder","id","min","disabled","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yNAEaA,EAAiBC,wBAAc,CAC1CC,UAAW,KACXC,cAAe,GACfC,cAAe,GACfC,iBAAkB,KAClBC,MAAO,GACPC,OAAQ,GACRC,OAAQ,GACRC,cAAe,GACfC,QAAS,GACTC,SAAS,EACTC,SAAS,EACTC,WAAW,EACXC,aAAa,EACbC,UAAW,aACXC,WAAY,aACZC,YAAa,aACbC,aAAc,aACdC,aAAc,aACdC,cAAe,aACfC,gBAAiB,aACjBC,kBAAmB,aACnBC,aAAc,aACdC,cAAe,aACfC,gBAAiB,eAGbC,EAAkB1B,EAAe2B,SAEjCC,EAAoB,kBAAMC,qBAAW7B,I,OC/B9B8B,EAAoB,aACpBC,EAAqB,cACrBC,EAAwB,iBACxBC,EAAyB,kBACzBC,EAA2B,oBAC3BC,EAAgC,yBAIhCC,EAAwB,iBCCxBC,EAAkB,SAAC,GAKzB,IAJLjC,EAII,EAJJA,cACAD,EAGI,EAHJA,cACAmC,EAEI,EAFJA,eAEI,IADJC,sBACI,SACE7B,EAAO,2BACR8B,OAAOC,KAAKrC,GAAesC,QAAO,SAACC,EAAKC,GAAN,mBAAC,eAAyBD,GAA1B,kBAAgCC,GAAY,MAAU,KACvFN,GAAkB,IAGlB9B,EAAM,2BACPgC,OAAOC,KAAKrC,GAAesC,QAAO,SAACC,EAAKC,GAAN,mBAAC,eAAyBD,GAA1B,kBAAgCC,EAAY,SAAS,KACtFzC,GAAiB,IAGjBU,EAAY2B,OAAOC,KAAKrC,GAAeyC,MAAK,SAAAD,GAAS,OAAIlC,EAAQkC,MAEvE,MAAO,CACLpC,SACAE,UACAG,YACAD,SAAS,EACTD,QAAS4B,EACTO,uBAAuB,EACvBrC,cAAe,GACfF,OAAQH,IAIC2C,EAAc,SAACC,EAAWC,GACrC,OAAQA,EAAWC,MACjB,KAAKpB,EACH,OAAOO,EAAgBY,EAAWE,SAGpC,KAAKpB,EACH,IAAMrB,EAAU8B,OAAOC,KAAKO,EAAUtC,SAASgC,QAC7C,SAACU,EAAMC,GAAP,mBAAC,eAAqBD,GAAtB,kBAA6BC,GAAO,MACpC,IAGF,OAAO,2BAAKL,GAAZ,IAAuBlC,aAAa,EAAMJ,YAG5C,KAAKyB,EACH,OAAO,2BAAKa,GAAZ,IAAuBF,sBAAuBG,EAAWE,QAAQL,wBAGnE,KAAKd,EACH,OAAO,2BAAKgB,GAAZ,IAAuBpC,QAASqC,EAAWE,QAAQvC,UAGrD,KAAKqB,EACH,IAAM1B,EAAM,2BACPyC,EAAUzC,QADH,kBAET0C,EAAWE,QAAQP,UAAYK,EAAWE,QAAQG,aAGrD,OAAO,2BAAKN,GAAZ,IAAuBzC,WAGzB,KAAK2B,EACH,IAAMxB,EAAO,2BACRsC,EAAUtC,SADF,kBAEVuC,EAAWE,QAAQP,UAAYK,EAAWE,QAAQI,eAGrD,OAAO,2BAAKP,GAAZ,IAAuBtC,UAASG,WAAW,IAG7C,KAAKuB,EACH,IAAM5B,EAAM,2BACPwC,EAAUxC,QADH,kBAETyC,EAAWE,QAAQP,UAAYK,EAAWE,QAAQK,aAGrD,OAAO,2BAAKR,GAAZ,IAAuBxC,WAEzB,QACE,OAAOwC,ICrEAS,EAAa,SAAC,GAWpB,IAVLC,EAUI,EAVJA,QACAC,EASI,EATJA,SACAzD,EAQI,EARJA,UACAC,EAOI,EAPJA,cACAmC,EAMI,EANJA,eACAC,EAKI,EALJA,eACAqB,EAII,EAJJA,iBAII,IAFJxD,qBAEI,MAFY,GAEZ,MADJyD,iBACI,SACEC,EAAsBC,mBAC1B,iBAAO,CAAE3D,gBAAeD,gBAAemC,iBAAgBC,oBACvD,CAACpC,EAAemC,EAAgBlC,EAAemC,IAGjD,EAAkCyB,qBAAWjB,EAAae,EAAqBzB,GAA/E,mBAAOW,EAAP,KAAkBiB,EAAlB,KACMC,EAAiBH,mBAAQ,kBAAMvB,OAAOC,KAAKO,EAAUzC,UAAS,CAACyC,EAAUzC,SAKzE4D,EAAgB,SAACvB,EAAWY,GAEhCS,EAAa,CAAEf,KAAMd,EAAuBe,QAAS,CAAEP,YAAWY,iBAG9DY,EAAe,aAQfC,EAAiB,aAIjBjD,EAAgB,SAACwB,EAAWU,GAAZ,OACpBW,EAAa,CAAEf,KAAMjB,EAAwBkB,QAAS,CAAEP,YAAWU,iBAE/DjC,EAAkB,SAACuB,EAAWW,GAClCU,EAAa,CAAEf,KAAMhB,EAA0BiB,QAAS,CAAEP,YAAWW,mBAGjEe,EAAyB,SAAAxB,GAC7BmB,EAAa,CAAEf,KAAMf,EAA+BgB,QAAS,CAAEL,4BAG3D3B,EAAe,SAAAP,GAAO,OAC1BqD,EAAa,CAAEf,KAAMlB,EAAuBmB,QAAS,CAAEvC,cAInD2D,EAA0B,SAAA5D,GAAO,OAAIA,GAErCW,EAAoB,kBAAM2C,EAAa,CAAEf,KAAMnB,KAE/CyC,EAAiBC,uBACrB,eAACC,EAAD,uDAAatE,EAAb,OACE6D,EAAa,CACXf,KAAMpB,EACNqB,QAAQ,2BAAMW,GAAP,IAA4B1D,cAAesE,QAEtD,CAACZ,EAAqB1D,IAqLlBY,EAAa,WACjBM,IAtJ6B,WAE7B,IAAIqD,GAAkB,EAEa,KAA/B3B,EAAUzC,OAAOqE,WAEnBT,EAAc,YADS,qBAEvBQ,GAAkB,GACsB,KAA/B3B,EAAUzC,OAAOqE,WAAoB5B,EAAUzC,OAAOqE,UAAUC,OAAS,GAElFV,EAAc,YADS,qBAEvBQ,GAAkB,GACsB,KAA/B3B,EAAUzC,OAAOqE,WAAoB5B,EAAUzC,OAAOqE,UAAUC,QAAU,IAEnFV,EAAc,YADS,4BAEvBQ,GAAkB,IAGlBR,EAAc,YADK,MAEnBQ,GAAkB,GAGc,KAA9B3B,EAAUzC,OAAOuE,UAEnBX,EAAc,WADS,qBAEvBQ,GAAkB,GACqB,KAA9B3B,EAAUzC,OAAOuE,UAAmB9B,EAAUzC,OAAOuE,SAASD,OAAS,GAEhFV,EAAc,WADS,qBAEvBQ,GAAkB,GACqB,KAA9B3B,EAAUzC,OAAOuE,UAAmB9B,EAAUzC,OAAOuE,SAASD,QAAU,IAEjFV,EAAc,WADS,6BAEvBQ,GAAkB,IAGlBR,EAAc,WADK,MAEnBQ,GAAkB,GAGa,KAA7B3B,EAAUzC,OAAOwE,SAEnBZ,EAAc,UADS,qBAEvBQ,GAAkB,GACoB,KAA7B3B,EAAUzC,OAAOwE,SAAkB/B,EAAUzC,OAAOwE,QAAQF,OAAS,GAE9EV,EAAc,UADS,2BAEvBQ,GAAkB,GACoB,KAA7B3B,EAAUzC,OAAOwE,SAAkB/B,EAAUzC,OAAOwE,QAAQF,QAAU,IAE/EV,EAAc,UADS,4BAEvBQ,GAAkB,IAGlBR,EAAc,UADK,MAEnBQ,GAAkB,GAGS,KAAzB3B,EAAUzC,OAAOyE,KAEnBb,EAAc,MADS,qBAEvBQ,GAAkB,GACgB,KAAzB3B,EAAUzC,OAAOyE,KAAchC,EAAUzC,OAAOyE,IAAM,IAE/Db,EAAc,MADS,cAEvBQ,GAAkB,GACgB,KAAzB3B,EAAUzC,OAAOyE,KAAchC,EAAUzC,OAAOyE,KAAO,IAEhEb,EAAc,MADS,gBAEvBQ,GAAkB,IAGlBR,EAAc,MADK,MAEnBQ,GAAkB,GAGW,KAA3B3B,EAAUzC,OAAO0E,OAEnBd,EAAc,QADS,qBAEvBQ,GAAkB,GACkB,KAA3B3B,EAAUzC,OAAO0E,OAAiBjC,EAAUzC,OAAO0E,MAAMC,SAAS,MAM3Ef,EAAc,QADK,MAEnBQ,GAAkB,IALlBR,EAAc,QADS,oBAEvBQ,GAAkB,GAOa,KAA7B3B,EAAUzC,OAAO4E,SAEnBhB,EAAc,UADS,qBAEvBQ,GAAkB,GACoB,KAA7B3B,EAAUzC,OAAO4E,SAAkBnC,EAAUzC,OAAO4E,QAAQN,OAAS,GAE9EV,EAAc,UADS,2BAEvBQ,GAAkB,GACoB,KAA7B3B,EAAUzC,OAAO4E,SAAkBnC,EAAUzC,OAAO4E,QAAQN,QAAU,IAE/EV,EAAc,UADS,4BAEvBQ,GAAkB,IAGlBR,EAAc,UADK,MAEnBQ,GAAkB,GAGU,KAA1B3B,EAAUzC,OAAO6E,MAEnBjB,EAAc,OADS,qBAEvBQ,GAAkB,GACiB,KAA1B3B,EAAUzC,OAAO6E,MAAepC,EAAUzC,OAAO6E,KAAKP,OAAS,GAExEV,EAAc,OADS,2BAEvBQ,GAAkB,GACiB,KAA1B3B,EAAUzC,OAAO6E,MAAepC,EAAUzC,OAAO6E,KAAKP,QAAU,IAEzEV,EAAc,OADS,4BAEvBQ,GAAkB,IAGlBR,EAAc,OADK,MAEnBQ,GAAkB,GAGiB,KAAjC3B,EAAUzC,OAAO8E,aAEnBlB,EAAc,cADS,qBAEvBQ,GAAkB,GACwB,KAAjC3B,EAAUzC,OAAO8E,aAAsBrC,EAAUzC,OAAO8E,YAAYR,OAAS,GAEtFV,EAAc,cADS,2BAEvBQ,GAAkB,GACwB,KAAjC3B,EAAUzC,OAAO8E,aAAsBrC,EAAUzC,OAAO8E,YAAYR,QAAU,IAEvFV,EAAc,cADS,6BAEvBQ,GAAkB,IAGlBR,EAAc,cADK,MAEnBQ,GAAkB,GAEpB,OAAOA,EASaW,KAGlBhB,GAAuB,GAGvBX,EAASX,EAAUzC,UA6BjBgF,EAAa,SAAA3C,GAAS,OAAI,WAC9BuB,EAAcvB,EAAW,MAEzBvB,EAAgBuB,GAAW,GAxNP,SAAAA,GAGkB,KAAhCI,EAAUzC,OAAOqC,GAEnBuB,EAAcvB,EADK,qBAGa,KAAhCI,EAAUzC,OAAOqC,IACjBI,EAAUzC,OAAOqC,GAAW4C,WAAWX,OAAS,GAClC,QAAdjC,GACc,UAAdA,EAGAuB,EAAcvB,EADK,qBAGa,KAAhCI,EAAUzC,OAAOqC,IACjBI,EAAUzC,OAAOqC,GAAW4C,WAAWX,QAAU,GAGjDV,EAAcvB,EADK,6BAInBuB,EAAcvB,EADK,MAoMvB6C,CAAc7C,KAGV8C,EAAe,SAAA9C,GAAS,OAAI,SAAAU,GAChClC,EAAcwB,EAAWU,GACzBnC,EC/S0B,SAACf,EAAeuF,GAC5C,IACE,OAAOC,KAAKC,UAAUF,KAAmBC,KAAKC,UAAUzF,GACxD,MAAO0F,GACP,OAAO,GD2SMC,CAAe/C,EAAUzC,OAAQH,IAC9C+D,EAAcvB,EAAW,QA0D3B,OAjCAoD,qBAAU,WACHzD,IAAkBS,EAAUlC,aACPoD,EAAe+B,OAAM,SAAArD,GAAS,OAAKI,EAAUxC,OAAOoC,QAE7E,CACDsB,EACA3B,EACAS,EAAUxC,OACVwC,EAAUlC,YACVyD,IAGFyB,qBAAU,WAENpC,IACCC,IACAb,EAAUkD,aACXlD,EAAUF,uBAEV0B,KAGGX,GAAab,EAAUkD,aAAelD,EAAUF,uBACnDwB,GAAuB,KAExB,CACDT,EACAW,EACAZ,EACAZ,EAAUkD,YACVlD,EAAUF,wBAGL,2BACFE,GADL,IAEE9C,YACAC,gBACAC,gBACAkC,iBACAd,cA1DoB,SAAAoB,GAAS,MAAK,CAClCuD,KAAMvD,EACNwD,MAAOpD,EAAUzC,OAAOqC,GACxByD,OAAQd,EAAW3C,GACnB0D,SAAUZ,EAAa9C,KAuDvBrB,aApDmB,SAAAqB,GAAS,MAAK,CACjCwD,MAAOpD,EAAUzC,OAAOqC,GACxBpC,OAAQwC,EAAUxC,OAAOoC,GACzBlC,QAASsC,EAAUtC,QAAQkC,KAkD3BnB,gBA/CsB,SAAAmB,GAAS,MAAK,CACpC2D,SAAU,SAAAjD,GAAU,OAAIlC,EAAcwB,EAAWU,IACjDkD,SAAU,SAAAhD,GAAU,OAAIW,EAAcvB,EAAWY,IACjDiD,WAAY,SAAAlD,GAAY,OAAIlC,EAAgBuB,EAAWW,MA6CvDpC,eACAiD,eACAD,gBACA/C,gBACAiD,iBACAhD,kBACAC,oBACAoF,iBAjVuB,aAkVvBnC,0BACAvD,aACAC,YAhHkB,SAAA0F,GAWlB,OAVIA,GAASA,EAAMC,gBACjBD,EAAMC,iBAGJD,GAASA,EAAME,iBACjBF,EAAME,kBAGD,OAAPnD,QAAO,IAAPA,OAEOc,KAsGPtD,aAnGmB,SAAAyF,GASnB,OARIA,GAASA,EAAMC,gBACjBD,EAAMC,iBAGJD,GAASA,EAAME,iBACjBF,EAAME,kBAGD7F,KA2FPD,UAAWyD,KAIFsC,EAAW,SAAAlE,GACtB,MAAyDhB,IAAjDL,EAAR,EAAQA,aAAcC,EAAtB,EAAsBA,cAAeC,EAArC,EAAqCA,gBAErC,MAAO,CAACD,EAAcoB,GAAYrB,EAAaqB,GAAYnB,EAAgBmB,K,sBE9YhEmE,EAAU,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,SAAaC,EAAY,iBAC3CC,EAAYzD,EAAWwD,GAEvBE,EAAiC,oBAAbH,EAE1B,OACE,cAACtF,EAAD,CAAiB0E,MAAOc,EAAxB,SACGC,EAAaH,EAASE,GAAaF,K,eCP7BI,EAAO,SAAC,GAA4B,IAA1BJ,EAAyB,EAAzBA,SAAaC,EAAY,iBAC9C,EAQIrF,IAFFX,GANF,EACEf,UADF,EAEEE,cAFF,EAGEgE,aAHF,EAIEC,eAJF,EAKEqC,iBALF,EAMEzF,aACAC,EAPF,EAOEA,aAKF,OACE,8CAAMmG,OAAO,IAAI1D,SAAUzC,EAAcwC,QAASzC,GAAiBgG,GAAnE,aACGD,MCdMM,G,MAAa,SAAC,GAAiC,IAA/B9G,EAA8B,EAA9BA,OAA8B,IAAtB2F,YAAsB,MAAf,SAAe,EACzD,KAAI,OAAC3F,QAAD,IAACA,OAAD,EAACA,EAAQqE,QACX,OAAO,KAET,IAAM0C,EAAa,CAAC/G,GAEpB,OACE,qBAAKgH,UAAU,kBAAkB,wBAAgBrB,EAAhB,oBAAjC,SACGoB,EAAWE,KAAI,SAAEC,GAAF,OACd,sBAAMC,MAAO,CAAEC,QAAS,SAAuCJ,UAAU,gBAAzE,SACGE,GADoCG,KAAKC,SAAStC,iBCVhDuC,EAAa,SAAC,GAAc,IAAZ5B,EAAW,EAAXA,KAC3B,EAA4BvE,IAApBpB,EAAR,EAAQA,OAAQE,EAAhB,EAAgBA,QAEVsH,EAAcxH,EAAO2F,GAE3B,OAAKzF,IAAW,OAACsH,QAAD,IAACA,OAAD,EAACA,EAAanD,QAKvB,cAAC,EAAD,CAAYrE,OAAQwH,EAAa7B,KAAMA,IAJrC,M,WCPE8B,EAAe,SAAC,GAAwB,IAAtB9B,EAAqB,EAArBA,KAASc,EAAY,iBAClD,EAAsCH,EAASX,GAA/C,sBAASC,EAAT,EAASA,MAAOE,EAAhB,EAAgBA,SAAUD,EAA1B,EAA0BA,OAI1B,OAAO,mCAAOF,KAAMA,EAAMC,MAAOA,EAAOE,SAFlB,SAAAK,GAAK,OAAIL,EAASK,EAAMuB,OAAO9B,QAEYC,OAAQA,GAAYY,K,qBCL1EkB,EAAgB,SAAC,GAAiC,IAA/BhC,EAA8B,EAA9BA,KAAMiC,EAAwB,EAAxBA,QAAYnB,EAAY,iBAC5D,EAAsCH,EAASX,GAA/C,sBAASC,EAAT,EAASA,MAAOE,EAAhB,EAAgBA,SAAUD,EAA1B,EAA0BA,OAI1B,OACE,gDAAQF,KAAMA,EAAMC,MAAOA,EAAOE,SAHb,SAAAK,GAAK,OAAIL,EAASK,EAAMuB,OAAO9B,QAGQC,OAAQA,GAAYY,GAAhF,aACGmB,EAAQX,KAAI,SAAAY,GAAM,OACjB,wBAA2BjC,MAAOiC,EAAOjC,MAAzC,SACGiC,EAAOC,OADGD,EAAOC,c,WCRfC,EAAkB,SAAC,GAAwB,IAAtBpC,EAAqB,EAArBA,KAASc,EAAY,iBACrD,EAAsCH,EAASX,GAA/C,sBAASC,EAAT,EAASA,MAAOE,EAAhB,EAAgBA,SAAUD,EAA1B,EAA0BA,OAI1B,OACE,iDACMY,GADN,IAEE/D,KAAK,WACLiD,KAAMA,EACNqC,QAASpC,EACTC,OAAQA,EACRC,SATkB,SAAAK,GAAK,OAAIL,EAASK,EAAMuB,OAAOM,cCJ1CC,EAAqB,SAAAC,GAAI,OACpCC,MAAM,GAAD,OCHmBC,yBDGnB,kBAAgC,CACnCC,OAAQ,OACRC,KAAMlD,KAAKC,UAAU6C,GACrBK,QAAS,CAAE,eAAgB,qCENlBC,EAAgB,CAC3B,CACEC,UAAW,YACX3I,MAAO,CACL,CAAE4C,KAAM,WAAYwE,QAAS,qBAC7B,CAAExE,KAAM,YAAakD,MAAO,EAAGsB,QAAS,qBACxC,CAAExE,KAAM,YAAakD,MAAO,GAAIsB,QAAS,6BAE3CwB,WAAY,QAEd,CACED,UAAW,YACX3I,MAAO,CACL,CAAE4C,KAAM,WAAYwE,QAAS,8BAC7B,CAAExE,KAAM,YAAakD,MAAO,EAAGsB,QAAS,8BACxC,CAAExE,KAAM,YAAakD,MAAO,GAAIsB,QAAS,sCAE3CwB,WAAY,UAGd,CACED,UAAW,WACX3I,MAAO,CACL,CAAE4C,KAAM,WAAYwE,QAAS,qBAC7B,CAAExE,KAAM,YAAakD,MAAO,EAAGsB,QAAS,qBACxC,CAAExE,KAAM,YAAakD,MAAO,GAAIsB,QAAS,6BAE3CwB,WAAY,QAEd,CACED,UAAW,WACX3I,MAAO,CACL,CAAE4C,KAAM,WAAYwE,QAAS,8BAC7B,CAAExE,KAAM,YAAakD,MAAO,EAAGsB,QAAS,8BACxC,CAAExE,KAAM,YAAakD,MAAO,GAAIsB,QAAS,sCAE3CwB,WAAY,UAEd,CACED,UAAW,UACX3I,MAAO,CACL,CAAE4C,KAAM,WAAYwE,QAAS,qBAC7B,CAAExE,KAAM,YAAakD,MAAO,EAAGsB,QAAS,2BACxC,CAAExE,KAAM,YAAakD,MAAO,GAAIsB,QAAS,6BAE3CwB,WAAY,QAEd,CACED,UAAW,UACX3I,MAAO,CACL,CAAE4C,KAAM,WAAYwE,QAAS,8BAC7B,CAAExE,KAAM,YAAakD,MAAO,EAAGsB,QAAS,oCACxC,CAAExE,KAAM,YAAakD,MAAO,GAAIsB,QAAS,sCAE3CwB,WAAY,UAEd,CACED,UAAW,MACX3I,MAAO,CACL,CAAE4C,KAAM,WAAYwE,QAAS,qBAC7B,CAAExE,KAAM,MAAOkD,MAAO,GAAIsB,QAAS,cACnC,CAAExE,KAAM,MAAOkD,MAAO,GAAIsB,QAAS,iBAErCwB,WAAY,QAEd,CACED,UAAW,MACX3I,MAAO,CACL,CAAE4C,KAAM,WAAYwE,QAAS,8BAC7B,CAAExE,KAAM,MAAOkD,MAAO,GAAIsB,QAAS,uBACnC,CAAExE,KAAM,MAAOkD,MAAO,GAAIsB,QAAS,0BAErCwB,WAAY,UAEd,CACED,UAAW,QACX3I,MAAO,CACL,CAAE4C,KAAM,WAAYwE,QAAS,qBAC7B,CAAExE,KAAM,QAASwE,QAAS,qBAE5BwB,WAAY,QAEd,CACED,UAAW,QACX3I,MAAO,CACL,CAAE4C,KAAM,WAAYwE,QAAS,8BAC7B,CAAExE,KAAM,QAASwE,QAAS,8BAE5BwB,WAAY,UAEd,CACED,UAAW,UACX3I,MAAO,CACL,CAAE4C,KAAM,WAAYwE,QAAS,qBAC7B,CAAExE,KAAM,YAAakD,MAAO,EAAGsB,QAAS,2BACxC,CAAExE,KAAM,YAAakD,MAAO,GAAIsB,QAAS,6BAE3CwB,WAAY,QAEd,CACED,UAAW,UACX3I,MAAO,CACL,CAAE4C,KAAM,WAAYwE,QAAS,8BAC7B,CAAExE,KAAM,YAAakD,MAAO,EAAGsB,QAAS,2BACxC,CAAExE,KAAM,YAAakD,MAAO,GAAIsB,QAAS,6BAE3CwB,WAAY,UAEd,CACED,UAAW,OACX3I,MAAO,CACL,CAAE4C,KAAM,WAAYwE,QAAS,qBAC7B,CAAExE,KAAM,YAAakD,MAAO,EAAGsB,QAAS,2BACxC,CAAExE,KAAM,YAAakD,MAAO,GAAIsB,QAAS,6BAE3CwB,WAAY,QAEd,CACED,UAAW,OACX3I,MAAO,CACL,CAAE4C,KAAM,WAAYwE,QAAS,8BAC7B,CAAExE,KAAM,YAAakD,MAAO,EAAGsB,QAAS,oCACxC,CAAExE,KAAM,YAAakD,MAAO,IAAKsB,QAAS,uCAE5CwB,WAAY,UAEd,CACED,UAAW,cACX3I,MAAO,CACL,CAAE4C,KAAM,WAAYwE,QAAS,qBAC7B,CAAExE,KAAM,YAAakD,MAAO,EAAGsB,QAAS,2BACxC,CAAExE,KAAM,YAAakD,MAAO,IAAKsB,QAAS,8BAE5CwB,WAAY,QAEd,CACED,UAAW,cACX3I,MAAO,CACL,CAAE4C,KAAM,WAAYwE,QAAS,8BAC7B,CAAExE,KAAM,YAAakD,MAAO,EAAGsB,QAAS,oCACxC,CAAExE,KAAM,YAAakD,MAAO,IAAKsB,QAAS,uCAE5CwB,WAAY,W,uBC5IHC,EAEE,IAGTC,EAAe,SAACC,EAAOhC,GAAY,IAAD,EACtC,OAAQA,EAAOnE,MACb,IAAK,aACH,OAAO,2BAAKmG,GAAZ,IAAmBxF,WAAW,EAAMyF,MAAO,OAC7C,IAAK,gBACH,OAAO,2BAAKD,GAAZ,IAAmBxF,WAAW,EAAOyF,MAAOjC,EAAOlE,UACrD,IAAK,gBACH,OAAO,2BACFkG,GADL,IAEExF,WAAW,EACX0F,sBAAsB,EACtBD,MAAO,KACPE,KAAI,UAAEnC,EAAOlE,eAAT,aAAE,EAAgBqG,KACtBC,aAAcpC,EAAOlE,UAEzB,QACE,OAAOkG,ICnBPK,EAAkB,CACtBjJ,cAAe,CAAC,CAAEiH,QAAS,gCAAkC,CAAEA,QAAS,uBACxE9C,UAAW,CAAC,CAAE8C,QAAS,6BAA+B,CAAEA,QAAS,wBACjE5C,SAAU,CAAC,CAAE4C,QAAS,4BAA8B,CAAEA,QAAS,yBAGpDiC,EAAc,SAAAC,GAAkB,IAAD,EAC1C,EAAsDC,mBAAS,MAA/D,mBAAOC,EAAP,KAA4BC,EAA5B,KAEA,EDc0B,SAAC,GAOtB,IANLC,EAMI,EANJA,aACAC,EAKI,EALJA,YACAC,EAII,EAJJA,QACAC,EAGI,EAHJA,UAGI,IAFJC,wBAEI,SADJC,EACI,EADJA,OAEA,EAA0BrG,qBAAWoF,EAAc,CACjDI,KAAMS,EACNpG,UAAWuG,EACXd,MAAO,KACPG,aAAc,KACdF,sBAAsB,IALxB,mBAAOF,EAAP,KAAciB,EAAd,KAQMC,EAAa,uCAAG,WAAOC,GAAP,iCAAAC,EAAA,6DAAqBC,EAArB,gCACpBJ,EAAS,CAAEpH,KAAM,aAAcC,QAAS,OADpB,kBAIKqH,EAJL,oBAIZG,EAJY,kBAMGA,OANH,EAMGA,EAAUC,MANb,wCAM0BD,QAN1B,IAM0BA,OAN1B,EAM0BA,EAAUC,OANpC,gDAM6C,KAN7C,QAMZC,EANY,KAQZC,EAAkB,CACtBtB,KAAMqB,EACNE,GAAIJ,EAASI,GACbC,OAAQL,EAASK,OACjBC,WAAYN,EAASM,YAGlBP,IACM,OAATP,QAAS,IAATA,KAAYW,GAEZR,EAAS,CAAEpH,KAAM,gBAAiBC,QAAS2H,KAlB3B,kDAqBbJ,IACI,OAAPR,QAAO,IAAPA,KAAO,MAEPI,EAAS,CAAEpH,KAAM,gBAAiBC,QAAQ,EAAD,MAxBzB,0DAAH,sDA6CnB,OAdA6C,qBAAU,WACR,IAAI0E,GAAY,EAMhB,OAJKL,GAAWK,GACdH,EAAcP,IAAgBU,GAGzB,WACLA,GAAY,KAIb,IAEI,CAACrB,EAhBS,kBAAckB,EAAcP,EAAY,WAAZ,gBC3DLkB,CAAa,CACnDb,QAAQ,EACRL,aAAcJ,EACdO,UAAW,YAA2B,IAAxBa,EAAuB,EAAvBA,OAAQD,EAAe,EAAfA,GAAIvB,EAAW,EAAXA,KACpBuB,GACFhB,EAAuB,MAGrBiB,IAAW7B,GACbY,EAAuBP,IAG3BU,QAAS,WACPH,EAAuBL,MAb3B,mBAAOyB,EAAP,KAiBA,MAAO,CACLrB,sBACAnG,SAnBF,KAoBEE,UAAWsH,EAAgBtH,UAC3BuH,eAAc,UAAED,EAAgB1B,oBAAlB,aAAE,EAA8BuB,SCpB5CK,EAAoB,CACxBrG,IAAK,IACLsG,SAAS,EACTC,IAAK,OACLtG,MAAO,GACPF,QAAS,GACTK,KAAM,GACND,QAAS,GACTL,SAAU,GACVF,UAAW,GACXS,YAAa,IAKFmG,EAAW,SAAC,GAIlB,IAHLC,EAGI,EAHJA,2BAGI,IAFJrL,qBAEI,MAFYiL,EAEZ,MADJzB,cAEA,EACED,OAFE,MADYlB,EACZ,GACI9E,EAAR,EAAQA,SAAUD,EAAlB,EAAkBA,QAASG,EAA3B,EAA2BA,UAAWiG,EAAtC,EAAsCA,oBAAqBsB,EAA3D,EAA2DA,eAG3D,OACE,cAAC,EAAD,CACE7I,gBAAc,EACdqB,kBAAgB,EAChBF,QAASA,EACTC,SAAUA,EACVrD,MAAO0I,EACPnF,UAAWA,EACXzD,cAAeA,EACfF,UAAW4J,EARb,SAUG,SAAA4B,GAAI,OACH,eAAC,EAAD,WACGN,GACC,sBAAM,cAAY,kBAAkBzD,MAAO,CAAEgE,WAAY,UAAzD,SACGP,KAIHM,EAAK/K,SAAW,cAAC,EAAD,CAAYH,OAAQkL,EAAKjL,gBAE3C,uBACA,gCACE,cAAC,EAAD,CACE,cAAY,YACZyC,KAAK,OACLiD,KAAK,YACLyF,YAAY,eAEd,cAAC,EAAD,CAAYzF,KAAK,iBAGnB,uBACA,gCACE,cAAC,EAAD,CACE,cAAY,WACZjD,KAAK,OACLiD,KAAK,WACLyF,YAAY,cAEd,cAAC,EAAD,CAAYzF,KAAK,gBAGnB,uBACA,gCACE,cAAC,EAAD,CAAc,cAAY,UAAUjD,KAAK,OAAOiD,KAAK,UAAUyF,YAAY,YAC3E,cAAC,EAAD,CAAYzF,KAAK,eAGnB,uBACA,8BACE,cAAC,EAAD,CACEA,KAAK,MACL,cAAY,MACZyF,YAAY,MACZxD,QAAS,CACP,CAAEE,MAAO,OAAQlC,MAAO,QACxB,CAAEkC,MAAO,SAAUlC,MAAO,eAKhC,uBACA,8BACE,kCACE,cAAC,EAAD,CAAiB,cAAY,UAAUyF,GAAG,UAAU1F,KAAK,YAD3D,eAMF,uBACA,gCACE,cAAC,EAAD,CAAc,cAAY,MAAMjD,KAAK,SAAS4I,IAAK,EAAG3F,KAAK,MAAMyF,YAAY,QAC7E,cAAC,EAAD,CAAYzF,KAAK,WAGnB,uBACA,gCACE,cAAC,EAAD,CAAc,cAAY,QAAQjD,KAAK,OAAOiD,KAAK,QAAQyF,YAAY,UACvE,cAAC,EAAD,CAAYzF,KAAK,aAGnB,uBACA,gCACE,cAAC,EAAD,CAAc,cAAY,UAAUjD,KAAK,OAAOiD,KAAK,UAAUyF,YAAY,YAC3E,cAAC,EAAD,CAAYzF,KAAK,eAGnB,uBACA,gCACE,cAAC,EAAD,CAAc,cAAY,OAAOjD,KAAK,OAAOiD,KAAK,OAAOyF,YAAY,SACrE,cAAC,EAAD,CAAYzF,KAAK,YAGnB,uBACA,gCACE,cAAC,EAAD,CACE,cAAY,cACZjD,KAAK,OACLiD,KAAK,cACLyF,YAAY,iBAEd,cAAC,EAAD,CAAYzF,KAAK,mBAGnB,uBACA,gCACE,wBACEjD,KAAK,SACL,cAAY,YACZ6I,UAAWN,KAAgCC,EAAK/K,SAAWkD,GAH7D,oBAQA,wBAAQ,cAAY,WAAWX,KAAK,QAApC,6BClJG8I,G,MAFH,kBAAM,cAAC,EAAD,MCAlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.35d121a6.chunk.js","sourcesContent":["import { createContext, useContext } from 'react';\n\nexport const FormLibContext = createContext({\n  apiErrors: null,\n  initialErrors: {},\n  initialValues: {},\n  initialIsTouched: null,\n  rules: [],\n  values: {},\n  errors: {},\n  generalErrors: {},\n  touched: {},\n  isValid: false,\n  isDirty: false,\n  isTouched: false,\n  isSubmitted: false,\n  resetForm: () => undefined,\n  submitForm: () => undefined,\n  handleReset: () => undefined,\n  handleSubmit: () => undefined,\n  setFormDirty: () => undefined,\n  setFieldValue: () => undefined,\n  setFieldTouched: () => undefined,\n  setFormSubmission: () => undefined,\n  getFieldMeta: () => undefined,\n  getFieldProps: () => undefined,\n  getFieldHelpers: () => undefined,\n});\n\nconst FormLibProvider = FormLibContext.Provider;\n\nconst useFormLibContext = () => useContext(FormLibContext);\n\nexport { FormLibProvider, useFormLibContext };\n","export const ACTION_RESET_FORM = 'RESET_FORM';\nexport const ACTION_SUBMIT_FORM = 'SUBMIT_FORM';\nexport const ACTION_SET_FORM_DIRTY = 'SET_FORM_DIRTY';\nexport const ACTION_SET_FIELD_VALUE = 'SET_FIELD_VALUE';\nexport const ACTION_SET_FIELD_TOUCHED = 'SET_FIELD_TOUCHED';\nexport const ACTION_SET_SUBMITTING_PROCESS = 'SET_SUBMITTING_PROCESS';\n\n// TODO Add missing actions\n\nexport const ACTION_SET_FORM_ERROR = 'SET_FORM_ERROR';","import {\n  ACTION_RESET_FORM,\n  ACTION_SUBMIT_FORM,\n  ACTION_SET_FORM_DIRTY,\n  ACTION_SET_FIELD_VALUE,\n  ACTION_SET_FIELD_TOUCHED,\n  ACTION_SET_SUBMITTING_PROCESS,\n  ACTION_SET_FORM_ERROR,\n} from './FormLib.actions';\n\nexport const initFormReducer = ({\n  initialValues,\n  initialErrors,\n  initialTouched,\n  isValidInitial = false,\n}) => {\n  const touched = {\n    ...Object.keys(initialValues).reduce((acc, fieldName) => ({ ...acc, [fieldName]: false }), {}),\n    ...(initialTouched || {}),\n  };\n\n  const errors = {\n    ...Object.keys(initialValues).reduce((acc, fieldName) => ({ ...acc, [fieldName]: null }), {}),\n    ...(initialErrors || {}),\n  };\n\n  const isTouched = Object.keys(initialValues).some(fieldName => touched[fieldName]);\n\n  return {\n    errors,\n    touched,\n    isTouched,\n    isDirty: false,\n    isValid: isValidInitial,\n    isSubmittingInProcess: false,\n    generalErrors: [],\n    values: initialValues,\n  };\n};\n\nexport const formReducer = (formState, formAction) => {\n  switch (formAction.type) {\n    case ACTION_RESET_FORM: {\n      return initFormReducer(formAction.payload);\n    }\n\n    case ACTION_SUBMIT_FORM: {\n      const touched = Object.keys(formState.touched).reduce(\n        (prev, curr) => ({ ...prev, [curr]: true }),\n        {}\n      );\n\n      return { ...formState, isSubmitted: true, touched };\n    }\n\n    case ACTION_SET_SUBMITTING_PROCESS: {\n      return { ...formState, isSubmittingInProcess: formAction.payload.isSubmittingInProcess };\n    }\n\n    case ACTION_SET_FORM_DIRTY: {\n      return { ...formState, isDirty: formAction.payload.isDirty };\n    }\n\n    case ACTION_SET_FIELD_VALUE: {\n      const values = {\n        ...formState.values,\n        [formAction.payload.fieldName]: formAction.payload.fieldValue,\n      };\n\n      return { ...formState, values };\n    }\n\n    case ACTION_SET_FIELD_TOUCHED: {\n      const touched = {\n        ...formState.touched,\n        [formAction.payload.fieldName]: formAction.payload.fieldTouched,\n      };\n\n      return { ...formState, touched, isTouched: true };\n    }\n\n    case ACTION_SET_FORM_ERROR: {\n      const errors = {\n        ...formState.errors,\n        [formAction.payload.fieldName]: formAction.payload.fieldError,\n      };\n\n      return { ...formState, errors };\n    }\n    default:\n      return formState;\n  }\n};\n\n","import { useCallback, useEffect, useMemo, useReducer } from 'react';\nimport {\n  checkFormDirty,\n  //  parseFormApiErrors\n} from './FormLib.helpers';\nimport { useFormLibContext } from './FormLib.context';\nimport { formReducer, initFormReducer } from './FormLib.reducer';\nimport {\n  // validationHandlers,\n  ValidationStagesE,\n} from './FormLib.validation';\nimport {\n  ACTION_RESET_FORM,\n  ACTION_SUBMIT_FORM,\n  ACTION_SET_FORM_DIRTY,\n  ACTION_SET_FIELD_VALUE,\n  ACTION_SET_FIELD_TOUCHED,\n  ACTION_SET_SUBMITTING_PROCESS,\n  ACTION_SET_FORM_ERROR,\n} from './FormLib.actions';\n\nexport const useFormLib = ({\n  onReset,\n  onSubmit,\n  apiErrors,\n  initialErrors,\n  initialTouched,\n  isValidInitial,\n  hasResetOnSubmit,\n  // rules = [],\n  initialValues = {},\n  isLoading = false,\n}) => {\n  const initialReducerProps = useMemo(\n    () => ({ initialValues, initialErrors, initialTouched, isValidInitial }),\n    [initialErrors, initialTouched, initialValues, isValidInitial]\n  );\n\n  const [formState, dispatchForm] = useReducer(formReducer, initialReducerProps, initFormReducer);\n  const fieldNamesList = useMemo(() => Object.keys(formState.values), [formState.values]);\n\n  /**\n   * Setters\n   */\n  const setFieldError = (fieldName, fieldError) => {\n    // TODO implement setter\n    dispatchForm({ type: ACTION_SET_FORM_ERROR, payload: { fieldName, fieldError } });\n  };\n\n  const setAllErrors = () => {\n    // TODO implement setter\n  };\n\n  const setGeneralErrors = () => {\n    // TODO implement setter\n  };\n\n  const setIsApiErrors = () => {\n    // TODO implement setter\n  };\n\n  const setFieldValue = (fieldName, fieldValue) =>\n    dispatchForm({ type: ACTION_SET_FIELD_VALUE, payload: { fieldName, fieldValue } });\n\n  const setFieldTouched = (fieldName, fieldTouched) => {\n    dispatchForm({ type: ACTION_SET_FIELD_TOUCHED, payload: { fieldName, fieldTouched } });\n  };\n\n  const setSubmittingInProcess = isSubmittingInProcess => {\n    dispatchForm({ type: ACTION_SET_SUBMITTING_PROCESS, payload: { isSubmittingInProcess } });\n  };\n\n  const setFormDirty = isDirty =>\n    dispatchForm({ type: ACTION_SET_FORM_DIRTY, payload: { isDirty } });\n\n  // TODO implement setter\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const setFormValidationStatus = isValid => isValid;\n\n  const setFormSubmission = () => dispatchForm({ type: ACTION_SUBMIT_FORM });\n\n  const setFormInitial = useCallback(\n    (nextState = initialValues) =>\n      dispatchForm({\n        type: ACTION_RESET_FORM,\n        payload: { ...initialReducerProps, initialValues: nextState },\n      }),\n    [initialReducerProps, initialValues]\n  );\n\n  /**\n   * Validation\n   */\n  const validateField = fieldName =>\n    // fieldName, validateOn, fieldValue = formState.values[fieldName]\n    {\n      if (formState.values[fieldName] === '') {\n        const fieldError = 'Field is required';\n        setFieldError(fieldName, fieldError);\n      } else if (\n        formState.values[fieldName] !== '' &&\n        formState.values[fieldName].toString().length < 3 &&\n        fieldName !== 'age' &&\n        fieldName !== 'email'\n      ) {\n        const fieldError = 'Enter few symbols';\n        setFieldError(fieldName, fieldError);\n      } else if (\n        formState.values[fieldName] !== '' &&\n        formState.values[fieldName].toString().length >= 99\n      ) {\n        const fieldError = 'Max length is 100 symbols';\n        setFieldError(fieldName, fieldError);\n      } else {\n        const fieldError = null;\n        setFieldError(fieldName, fieldError);\n      }\n    };\n\n  const validateFormSubmission = () => {\n    // TODO validate if form is valid\n    let formIsValidated = false;\n\n    if (formState.values.firstName === '') {\n      const fieldErrorName = 'Field is required';\n      setFieldError('firstName', fieldErrorName);\n      formIsValidated = false;\n    } else if (formState.values.firstName !== '' && formState.values.firstName.length < 3) {\n      const fieldErrorName = 'Enter few symbols';\n      setFieldError('firstName', fieldErrorName);\n      formIsValidated = false;\n    } else if (formState.values.firstName !== '' && formState.values.firstName.length >= 99) {\n      const fieldErrorName = 'Max length is 99 symbols';\n      setFieldError('firstName', fieldErrorName);\n      formIsValidated = false;\n    } else {\n      const fieldError = null;\n      setFieldError('firstName', fieldError);\n      formIsValidated = true;\n    }\n    // last name\n    if (formState.values.lastName === '') {\n      const fieldErrorName = 'Field is required';\n      setFieldError('lastName', fieldErrorName);\n      formIsValidated = false;\n    } else if (formState.values.lastName !== '' && formState.values.lastName.length < 3) {\n      const fieldErrorName = 'Enter few symbols';\n      setFieldError('lastName', fieldErrorName);\n      formIsValidated = false;\n    } else if (formState.values.lastName !== '' && formState.values.lastName.length >= 99) {\n      const fieldErrorName = 'Max length is 100 symbols';\n      setFieldError('lastName', fieldErrorName);\n      formIsValidated = false;\n    } else {\n      const fieldError = null;\n      setFieldError('lastName', fieldError);\n      formIsValidated = true;\n    }\n    // website\n    if (formState.values.website === '') {\n      const fieldErrorName = 'Field is required';\n      setFieldError('website', fieldErrorName);\n      formIsValidated = false;\n    } else if (formState.values.website !== '' && formState.values.website.length < 1) {\n      const fieldErrorName = 'Enter at least 1 symbol';\n      setFieldError('website', fieldErrorName);\n      formIsValidated = false;\n    } else if (formState.values.website !== '' && formState.values.website.length >= 20) {\n      const fieldErrorName = 'Max length is 20 symbols';\n      setFieldError('website', fieldErrorName);\n      formIsValidated = false;\n    } else {\n      const fieldError = null;\n      setFieldError('website', fieldError);\n      formIsValidated = true;\n    }\n    // age\n    if (formState.values.age === '') {\n      const fieldErrorName = 'Field is required';\n      setFieldError('age', fieldErrorName);\n      formIsValidated = false;\n    } else if (formState.values.age !== '' && formState.values.age < 18) {\n      const fieldErrorName = 'Too young!';\n      setFieldError('age', fieldErrorName);\n      formIsValidated = false;\n    } else if (formState.values.age !== '' && formState.values.age >= 99) {\n      const fieldErrorName = 'Oppps,sorry!';\n      setFieldError('age', fieldErrorName);\n      formIsValidated = false;\n    } else {\n      const fieldError = null;\n      setFieldError('age', fieldError);\n      formIsValidated = true;\n    }\n    // email to do\n    if (formState.values.email === '') {\n      const fieldErrorName = 'Field is required';\n      setFieldError('email', fieldErrorName);\n      formIsValidated = false;\n    } else if (formState.values.email !== '' && !formState.values.email.includes('@')) {\n      const fieldErrorName = 'Incorrect format';\n      setFieldError('email', fieldErrorName);\n      formIsValidated = false;\n    } else {\n      const fieldError = null;\n      setFieldError('email', fieldError);\n      formIsValidated = true;\n    }\n    // country\n    if (formState.values.country === '') {\n      const fieldErrorName = 'Field is required';\n      setFieldError('country', fieldErrorName);\n      formIsValidated = false;\n    } else if (formState.values.country !== '' && formState.values.country.length < 2) {\n      const fieldErrorName = 'Enter at least 2 symbol';\n      setFieldError('country', fieldErrorName);\n      formIsValidated = false;\n    } else if (formState.values.country !== '' && formState.values.country.length >= 30) {\n      const fieldErrorName = 'Max length is 30 symbols';\n      setFieldError('country', fieldErrorName);\n      formIsValidated = false;\n    } else {\n      const fieldError = null;\n      setFieldError('country', fieldError);\n      formIsValidated = true;\n    }\n    // city\n    if (formState.values.city === '') {\n      const fieldErrorName = 'Field is required';\n      setFieldError('city', fieldErrorName);\n      formIsValidated = false;\n    } else if (formState.values.city !== '' && formState.values.city.length < 2) {\n      const fieldErrorName = 'Enter at least 2 symbol';\n      setFieldError('city', fieldErrorName);\n      formIsValidated = false;\n    } else if (formState.values.city !== '' && formState.values.city.length >= 30) {\n      const fieldErrorName = 'Max length is 30 symbols';\n      setFieldError('city', fieldErrorName);\n      formIsValidated = false;\n    } else {\n      const fieldError = null;\n      setFieldError('city', fieldError);\n      formIsValidated = true;\n    }\n    // catch phrase\n    if (formState.values.catchPhrase === '') {\n      const fieldErrorName = 'Field is required';\n      setFieldError('catchPhrase', fieldErrorName);\n      formIsValidated = false;\n    } else if (formState.values.catchPhrase !== '' && formState.values.catchPhrase.length < 5) {\n      const fieldErrorName = 'Enter at least 5 symbol';\n      setFieldError('catchPhrase', fieldErrorName);\n      formIsValidated = false;\n    } else if (formState.values.catchPhrase !== '' && formState.values.catchPhrase.length >= 99) {\n      const fieldErrorName = 'Max length is 100 symbols';\n      setFieldError('catchPhrase', fieldErrorName);\n      formIsValidated = false;\n    } else {\n      const fieldError = null;\n      setFieldError('catchPhrase', fieldError);\n      formIsValidated = true;\n    }\n    return formIsValidated;\n  };\n\n  /**\n   * Handlers\n   */\n  const submitForm = () => {\n    setFormSubmission();\n\n    const isFormValid = validateFormSubmission();\n\n    if (isFormValid) {\n      setSubmittingInProcess(true);\n      setIsApiErrors(false);\n\n      onSubmit(formState.values);\n    }\n  };\n\n  const handleReset = event => {\n    if (event && event.preventDefault) {\n      event.preventDefault();\n    }\n\n    if (event && event.stopPropagation) {\n      event.stopPropagation();\n    }\n\n    onReset?.();\n\n    return setFormInitial();\n  };\n\n  const handleSubmit = event => {\n    if (event && event.preventDefault) {\n      event.preventDefault();\n    }\n\n    if (event && event.stopPropagation) {\n      event.stopPropagation();\n    }\n\n    return submitForm();\n  };\n  const handleBlur = fieldName => () => {\n    setFieldError(fieldName, null);\n    setAllErrors(fieldName, null);\n    setFieldTouched(fieldName, true);\n    validateField(fieldName, ValidationStagesE.BLUR);\n  };\n\n  const handleChange = fieldName => fieldValue => {\n    setFieldValue(fieldName, fieldValue);\n    setFormDirty(checkFormDirty(formState.values, initialValues));\n    setFieldError(fieldName, null);\n  };\n\n  /**\n   * Getters\n   */\n  const getFieldProps = fieldName => ({\n    name: fieldName,\n    value: formState.values[fieldName],\n    onBlur: handleBlur(fieldName),\n    onChange: handleChange(fieldName),\n  });\n\n  const getFieldMeta = fieldName => ({\n    value: formState.values[fieldName],\n    errors: formState.errors[fieldName],\n    touched: formState.touched[fieldName],\n  });\n\n  const getFieldHelpers = fieldName => ({\n    setValue: fieldValue => setFieldValue(fieldName, fieldValue),\n    setError: fieldError => setFieldError(fieldName, fieldError),\n    setTouched: fieldTouched => setFieldTouched(fieldName, fieldTouched),\n  });\n\n  useEffect(() => {\n    if (!isValidInitial || formState.isSubmitted) {\n      setFormValidationStatus(fieldNamesList.every(fieldName => !formState.errors[fieldName]));\n    }\n  }, [\n    fieldNamesList,\n    isValidInitial,\n    formState.errors,\n    formState.isSubmitted,\n    setFormValidationStatus,\n  ]);\n\n  useEffect(() => {\n    if (\n      hasResetOnSubmit &&\n      !isLoading &&\n      !formState.isApiErrors &&\n      formState.isSubmittingInProcess\n    ) {\n      setFormInitial();\n    }\n\n    if (!isLoading && formState.isApiErrors && formState.isSubmittingInProcess) {\n      setSubmittingInProcess(false);\n    }\n  }, [\n    isLoading,\n    setFormInitial,\n    hasResetOnSubmit,\n    formState.isApiErrors,\n    formState.isSubmittingInProcess,\n  ]);\n\n  return {\n    ...formState,\n    apiErrors,\n    initialErrors,\n    initialValues,\n    initialTouched,\n    getFieldProps,\n    getFieldMeta,\n    getFieldHelpers,\n    setFormDirty,\n    setAllErrors,\n    setFieldError,\n    setFieldValue,\n    setIsApiErrors,\n    setFieldTouched,\n    setFormSubmission,\n    setGeneralErrors,\n    setFormValidationStatus,\n    submitForm,\n    handleReset,\n    handleSubmit,\n    resetForm: setFormInitial,\n  };\n};\n\nexport const useField = fieldName => {\n  const { getFieldMeta, getFieldProps, getFieldHelpers } = useFormLibContext();\n\n  return [getFieldProps(fieldName), getFieldMeta(fieldName), getFieldHelpers(fieldName)];\n};\n\nexport const useApiErrors = () =>\n  // initialValues,\n  // apiErrors,\n  // setAllErrors,\n  // setGeneralErrors,\n  // setIsApiErrors\n  {\n    // TODO implement hook for api errors, that will parse errors and set it into form\n  };\n","export const parseFormApiErrors = (initialValues, apiErrors) => {\n  const formErrors = { generalErrors: null, fieldErrors: null };\n\n  if (!apiErrors || !initialValues) {\n    return formErrors;\n  }\n\n  // TODO implement parser for Api errors\n\n  return formErrors;\n};\n\nexport const checkFormDirty = (initialValues, currentValues) => {\n  try {\n    return JSON.stringify(currentValues) === JSON.stringify(initialValues);\n  } catch (e) {\n    return true;\n  }\n};\n","import React from 'react';\nimport { useFormLib } from './FormLib.hooks';\nimport { FormLibProvider } from './FormLib.context';\n\nexport const FormLib = ({ children, ...props }) => {\n  const formProps = useFormLib(props);\n\n  const isFunction = typeof children === 'function';\n\n  return (\n    <FormLibProvider value={formProps}>\n      {isFunction ? children(formProps) : children}\n    </FormLibProvider>\n  );\n};\n","import React from 'react';\nimport { useApiErrors } from '../../FormLib.hooks';\nimport { useFormLibContext } from '../../FormLib.context';\n\nexport const Form = ({ children, ...props }) => {\n  const {\n    apiErrors,\n    initialValues,\n    setAllErrors,\n    setIsApiErrors,\n    setGeneralErrors,\n    handleReset,\n    handleSubmit,\n  } = useFormLibContext();\n\n  useApiErrors(initialValues, apiErrors, setAllErrors, setGeneralErrors, setIsApiErrors);\n\n  return (\n    <form action=\"#\" onSubmit={handleSubmit} onReset={handleReset} {...props}>\n      {children}\n    </form>\n  );\n};\n","import React from 'react';\nimport './ErrorLabel.css'\n\n// Be careful! Don't remove name & data-testid props, it will be used for tests.\n\nexport const ErrorLabel = ({ errors, name = 'global' }) => {\n  if (!errors?.length) {\n    return null;\n  }\n  const mapedError = [errors]\n\n  return (\n    <div className=\"error_container\" data-testid={`${name}-error-container`}>\n      {mapedError.map(( message ) => (\n        <span style={{ display: 'block'}} key={Math.random().toString} className=\"error_message\">\n          {message}\n        </span>\n      ))}\n    </div>\n  );\n};\n","import React from 'react';\nimport { useFormLibContext } from '../../FormLib.context';\nimport { ErrorLabel } from '../ErrorLabel/ErrorLabel';\n\nexport const FieldError = ({ name }) => {\n  const { errors, touched } = useFormLibContext(name);\n\n  const fieldErrors = errors[name];\n\n  if (!touched || !fieldErrors?.length) {\n    return null;\n  }\n\n  // Be careful! Don't remove name prop, it will be used for tests.\n  return <ErrorLabel errors={fieldErrors} name={name} />;\n};","import React from 'react';\nimport { useField } from '../../FormLib.hooks';\n\nexport const FormLibInput = ({ name, ...props }) => {\n  const [{ value, onChange, onBlur }] = useField(name);\n\n  const onChangeInput = event => onChange(event.target.value);\n\n  return <input name={name} value={value} onChange={onChangeInput} onBlur={onBlur} {...props} />;\n};\n","import React from 'react';\nimport { useField } from '../../FormLib.hooks';\n\nexport const FormLibSelect = ({ name, options, ...props }) => {\n  const [{ value, onChange, onBlur }] = useField(name);\n\n  const onChangeSelect = event => onChange(event.target.value);\n\n  return (\n    <select name={name} value={value} onChange={onChangeSelect} onBlur={onBlur} {...props}>\n      {options.map(option => (\n        <option key={option.label} value={option.value}>\n          {option.label}\n        </option>\n      ))}\n    </select>\n  );\n};\n","import React from 'react';\nimport { useField } from '../../FormLib.hooks';\n\nexport const FormLibCheckbox = ({ name, ...props }) => {\n  const [{ value, onChange, onBlur }] = useField(name);\n\n  const onChangeInput = event => onChange(event.target.checked);\n\n  return (\n    <input\n      {...props}\n      type=\"checkbox\"\n      name={name}\n      checked={value}\n      onBlur={onBlur}\n      onChange={onChangeInput}\n    />\n  );\n};\n","import { APP_DOMAIN } from '../config';\n\nexport const registerApiCreator = user =>\n  fetch(`${APP_DOMAIN}users/register`, {\n    method: 'POST',\n    body: JSON.stringify(user),\n    headers: { 'Content-Type': 'application/json;charset=utf-8' },\n  });\n","export const APP_DOMAIN = process.env.REACT_APP_API_DOMAIN || '';\n","export const userFormRules = [\n  {\n    inputName: 'firstName',\n    rules: [\n      { type: 'required', message: 'Field is required' },\n      { type: 'minLength', value: 3, message: 'Enter few symbols' },\n      { type: 'maxLength', value: 99, message: 'Max length is 99 symbols' },\n    ],\n    validateOn: 'blur',\n  },\n  {\n    inputName: 'firstName',\n    rules: [\n      { type: 'required', message: '(Submit) Field is required' },\n      { type: 'minLength', value: 3, message: '(Submit) Enter few symbols' },\n      { type: 'maxLength', value: 99, message: '(Submit) Max length is 99 symbols' },\n    ],\n    validateOn: 'submit',\n  },\n\n  {\n    inputName: 'lastName',\n    rules: [\n      { type: 'required', message: 'Field is required' },\n      { type: 'minLength', value: 3, message: 'Enter few symbols' },\n      { type: 'maxLength', value: 99, message: 'Max length is 99 symbols' },\n    ],\n    validateOn: 'blur',\n  },\n  {\n    inputName: 'lastName',\n    rules: [\n      { type: 'required', message: '(Submit) Field is required' },\n      { type: 'minLength', value: 3, message: '(Submit) Enter few symbols' },\n      { type: 'maxLength', value: 99, message: '(Submit) Max length is 99 symbols' },\n    ],\n    validateOn: 'submit',\n  },\n  {\n    inputName: 'website',\n    rules: [\n      { type: 'required', message: 'Field is required' },\n      { type: 'minLength', value: 1, message: 'Enter at least 1 symbol' },\n      { type: 'maxLength', value: 20, message: 'Max length is 20 symbols' },\n    ],\n    validateOn: 'blur',\n  },\n  {\n    inputName: 'website',\n    rules: [\n      { type: 'required', message: '(Submit) Field is required' },\n      { type: 'minLength', value: 1, message: '(Submit) Enter at least 1 symbol' },\n      { type: 'maxLength', value: 20, message: '(Submit) Max length is 20 symbols' },\n    ],\n    validateOn: 'submit',\n  },\n  {\n    inputName: 'age',\n    rules: [\n      { type: 'required', message: 'Field is required' },\n      { type: 'min', value: 18, message: 'Too young!' },\n      { type: 'max', value: 99, message: 'Oppps,sorry!' },\n    ],\n    validateOn: 'blur',\n  },\n  {\n    inputName: 'age',\n    rules: [\n      { type: 'required', message: '(Submit) Field is required' },\n      { type: 'min', value: 18, message: '(Submit) Too young!' },\n      { type: 'max', value: 99, message: '(Submit) Oppps,sorry!' },\n    ],\n    validateOn: 'submit',\n  },\n  {\n    inputName: 'email',\n    rules: [\n      { type: 'required', message: 'Field is required' },\n      { type: 'email', message: 'Incorrect format' },\n    ],\n    validateOn: 'blur',\n  },\n  {\n    inputName: 'email',\n    rules: [\n      { type: 'required', message: '(Submit) Field is required' },\n      { type: 'email', message: '(Submit) Incorrect format' },\n    ],\n    validateOn: 'submit',\n  },\n  {\n    inputName: 'country',\n    rules: [\n      { type: 'required', message: 'Field is required' },\n      { type: 'minLength', value: 2, message: 'Enter at least 2 symbol' },\n      { type: 'maxLength', value: 30, message: 'Max length is 30 symbols' },\n    ],\n    validateOn: 'blur',\n  },\n  {\n    inputName: 'country',\n    rules: [\n      { type: 'required', message: '(Submit) Field is required' },\n      { type: 'minLength', value: 2, message: 'Enter at least 2 symbol' },\n      { type: 'maxLength', value: 30, message: 'Max length is 30 symbols' },\n    ],\n    validateOn: 'submit',\n  },\n  {\n    inputName: 'city',\n    rules: [\n      { type: 'required', message: 'Field is required' },\n      { type: 'minLength', value: 2, message: 'Enter at least 2 symbol' },\n      { type: 'maxLength', value: 30, message: 'Max length is 30 symbols' },\n    ],\n    validateOn: 'blur',\n  },\n  {\n    inputName: 'city',\n    rules: [\n      { type: 'required', message: '(Submit) Field is required' },\n      { type: 'minLength', value: 5, message: '(Submit) Enter at least 5 symbol' },\n      { type: 'maxLength', value: 100, message: '(Submit) Max length is 100 symbols' },\n    ],\n    validateOn: 'submit',\n  },\n  {\n    inputName: 'catchPhrase',\n    rules: [\n      { type: 'required', message: 'Field is required' },\n      { type: 'minLength', value: 5, message: 'Enter at least 5 symbol' },\n      { type: 'maxLength', value: 100, message: 'Max length is 100 symbols' },\n    ],\n    validateOn: 'blur',\n  },\n  {\n    inputName: 'catchPhrase',\n    rules: [\n      { type: 'required', message: '(Submit) Field is required' },\n      { type: 'minLength', value: 5, message: '(Submit) Enter at least 5 symbol' },\n      { type: 'maxLength', value: 100, message: '(Submit) Max length is 100 symbols' },\n    ],\n    validateOn: 'submit',\n  },\n];\n","import { useEffect, useReducer } from 'react';\n\nexport const HttpStatusE = {\n  CREATED: 201,\n  BAD_REQUEST: 400,\n};\n\nconst fetchReducer = (state, action) => {\n  switch (action.type) {\n    case 'FETCH_INIT':\n      return { ...state, isLoading: true, error: null };\n    case 'FETCH_FAILURE':\n      return { ...state, isLoading: false, error: action.payload };\n    case 'FETCH_SUCCESS':\n      return {\n        ...state,\n        isLoading: false,\n        isFirstRequestLoaded: true,\n        error: null,\n        data: action.payload?.data,\n        fullResponse: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport const useDataFetch = ({\n  fetchHandler,\n  initialData,\n  onError,\n  onSuccess,\n  isLoadingInitial = false,\n  isLazy,\n}) => {\n  const [state, dispatch] = useReducer(fetchReducer, {\n    data: initialData,\n    isLoading: isLoadingInitial,\n    error: null,\n    fullResponse: null,\n    isFirstRequestLoaded: false,\n  });\n\n  const requestWorker = async (fetchPromise, didCancel = false) => {\n    dispatch({ type: 'FETCH_INIT', payload: null });\n\n    try {\n      const response = await fetchPromise;\n\n      const responseData = response?.json ? await response?.json() : null;\n\n      const responsePayload = {\n        data: responseData,\n        ok: response.ok,\n        status: response.status,\n        statusText: response.statusText,\n      };\n\n      if (!didCancel) {\n        onSuccess?.(responsePayload);\n\n        dispatch({ type: 'FETCH_SUCCESS', payload: responsePayload });\n      }\n    } catch (error) {\n      if (!didCancel) {\n        onError?.(error);\n\n        dispatch({ type: 'FETCH_FAILURE', payload: error });\n      }\n    }\n  };\n\n  const fetchApi = (...props) => requestWorker(fetchHandler(...props));\n\n  useEffect(() => {\n    let didCancel = false;\n\n    if (!isLazy && !didCancel) {\n      requestWorker(fetchHandler(), didCancel);\n    }\n\n    return () => {\n      didCancel = true;\n    };\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return [state, fetchApi];\n};\n","import { useState } from 'react';\nimport { HttpStatusE, useDataFetch } from '../../../hooks/useDataFetch';\n\n// Mock data can be changed, but model will be the same as described in README file\nconst MOCK_API_ERRORS = {\n  generalErrors: [{ message: 'Please, enter correct values' }, { message: 'Too many requests!' }],\n  firstName: [{ message: 'Enter correct first name!' }, { message: 'Alphanumeric string' }],\n  lastName: [{ message: 'Enter correct last name!' }, { message: 'Alphanumeric string' }],\n};\n\nexport const useUserForm = submitPromise => {\n  const [apiValidationErrors, setApiValidationErrors] = useState(null);\n\n  const [registerUserRes, registerUser] = useDataFetch({\n    isLazy: true,\n    fetchHandler: submitPromise,\n    onSuccess: ({ status, ok, data }) => {\n      if (ok) {\n        setApiValidationErrors(null);\n      }\n\n      if (status === HttpStatusE.BAD_REQUEST) {\n        setApiValidationErrors(data);\n      }\n    },\n    onError: () => {\n      setApiValidationErrors(MOCK_API_ERRORS);\n    },\n  });\n\n  return {\n    apiValidationErrors,\n    onSubmit: registerUser,\n    isLoading: registerUserRes.isLoading,\n    responseStatus: registerUserRes.fullResponse?.status,\n  };\n};\n","import React from 'react';\nimport {\n  Form,\n  FormLib,\n  ErrorLabel,\n  FieldError,\n  FormLibInput,\n  FormLibSelect,\n  FormLibCheckbox,\n} from '../../libs/FormLib';\nimport { registerApiCreator } from '../../api/registration';\nimport { userFormRules } from '../../validation/formValidation';\nimport { useUserForm } from './hooks/useUserForm';\n\nconst EMPTY_FORM_VALUES = {\n  age: '0',\n  married: false,\n  sex: 'male',\n  email: '',\n  website: '',\n  city: '',\n  country: '',\n  lastName: '',\n  firstName: '',\n  catchPhrase: '',\n};\n\n// Be careful! Don't remove data-testid && UserForm props, it will be used for tests.\n\nexport const UserForm = ({\n  isSubmitPermanentlyEnabled,\n  initialValues = EMPTY_FORM_VALUES,\n  submitPromise = registerApiCreator,\n}) => {\n  const { onSubmit, onReset, isLoading, apiValidationErrors, responseStatus } =\n    useUserForm(submitPromise);\n\n  return (\n    <FormLib\n      isValidInitial\n      hasResetOnSubmit\n      onReset={onReset}\n      onSubmit={onSubmit}\n      rules={userFormRules}\n      isLoading={isLoading}\n      initialValues={initialValues}\n      apiErrors={apiValidationErrors}\n    >\n      {form => (\n        <Form>\n          {responseStatus && (\n            <span data-testid=\"response-status\" style={{ visibility: 'hidden' }}>\n              {responseStatus}\n            </span>\n          )}\n\n          {!form.isValid && <ErrorLabel errors={form.generalErrors} />}\n\n          <br />\n          <div>\n            <FormLibInput\n              data-testid=\"firstName\"\n              type=\"text\"\n              name=\"firstName\"\n              placeholder=\"First Name\"\n            />\n            <FieldError name=\"firstName\" />\n          </div>\n\n          <br />\n          <div>\n            <FormLibInput\n              data-testid=\"lastName\"\n              type=\"text\"\n              name=\"lastName\"\n              placeholder=\"Last Name\"\n            />\n            <FieldError name=\"lastName\" />\n          </div>\n\n          <br />\n          <div>\n            <FormLibInput data-testid=\"website\" type=\"text\" name=\"website\" placeholder=\"Website\" />\n            <FieldError name=\"website\" />\n          </div>\n\n          <br />\n          <div>\n            <FormLibSelect\n              name=\"sex\"\n              data-testid=\"sex\"\n              placeholder=\"Sex\"\n              options={[\n                { label: 'Male', value: 'male' },\n                { label: 'Female', value: 'female' },\n              ]}\n            />\n          </div>\n\n          <br />\n          <div>\n            <label>\n              <FormLibCheckbox data-testid=\"married\" id=\"married\" name=\"married\" />\n              Married\n            </label>\n          </div>\n\n          <br />\n          <div>\n            <FormLibInput data-testid=\"age\" type=\"number\" min={0} name=\"age\" placeholder=\"Age\" />\n            <FieldError name=\"age\" />\n          </div>\n\n          <br />\n          <div>\n            <FormLibInput data-testid=\"email\" type=\"text\" name=\"email\" placeholder=\"Email\" />\n            <FieldError name=\"email\" />\n          </div>\n\n          <br />\n          <div>\n            <FormLibInput data-testid=\"country\" type=\"text\" name=\"country\" placeholder=\"Country\" />\n            <FieldError name=\"country\" />\n          </div>\n\n          <br />\n          <div>\n            <FormLibInput data-testid=\"city\" type=\"text\" name=\"city\" placeholder=\"City\" />\n            <FieldError name=\"city\" />\n          </div>\n\n          <br />\n          <div>\n            <FormLibInput\n              data-testid=\"catchPhrase\"\n              type=\"text\"\n              name=\"catchPhrase\"\n              placeholder=\"Catch Phrase\"\n            />\n            <FieldError name=\"catchPhrase\" />\n          </div>\n\n          <br />\n          <div>\n            <button\n              type=\"submit\"\n              data-testid=\"submitBtn\"\n              disabled={!isSubmitPermanentlyEnabled && (!form.isValid || isLoading)}\n            >\n              Submit\n            </button>\n\n            <button data-testid=\"resetBtn\" type=\"reset\">\n              Reset\n            </button>\n          </div>\n        </Form>\n      )}\n    </FormLib>\n  );\n};\n","import React from 'react';\nimport { UserForm } from './components/UserForm/UserForm';\nimport './app.css'\n\nconst App = () => <UserForm />;\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}